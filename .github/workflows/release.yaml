name: Release kubectl plugin
on:
  release:
    types: [created]

jobs:
  releases-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
      - name: Get FDB client
        run: |
          go get -v -t -d ./...
          curl --fail https://www.foundationdb.org/downloads/6.2.28/ubuntu/installers/foundationdb-clients_6.2.28-1_amd64.deb -o fdb.deb
          sudo dpkg -i fdb.deb
      - name: Build
        run: make plugin
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/kubectl-fdb
          asset_name: kubectl-fdb-linux-amd64
          asset_content_type: application/octet-stream
  releases-darwin:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
      - name: Get FDB client
        run: |
          go get -v -t -d ./...
          curl --fail https://www.foundationdb.org/downloads/6.2.28/macOS/installers/FoundationDB-6.2.28.pkg -o fdb.pkg
          sudo installer -allowUntrusted -verbose -pkg ./fdb.pkg -target /
      - name: Build
        # TODO should we add a checksum and a tar file?
        run: make plugin
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/kubectl-fdb
          asset_name: kubectl-fdb-darwin-amd64
          asset_content_type: application/octet-stream
      # TODO Windows?
